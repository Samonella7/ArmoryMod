[event]
	name=open_armory_menu
	id=open_armory_menu
	first_time_only=no
	# When this event is fired, there should be a variety of information standing by.
	# most importantly, the tile that the player wants to examine should be in $armorymod.loc. 
	# if there is a unit there, capture it's information:
	[if]
		[have_unit]
			x,y=$armorymod.loc.x,$armorymod.loc.y
			[filter_vision]
				side=$side_number|
				visible=yes
			[/filter_vision]
		[/have_unit]
		[then]
			{VARIABLE armorymod.have_unit yes}
			[fire_event]
				name=armory_update_unit_vars
				[primary_unit]
					x,y=$armorymod.loc.x,$armorymod.loc.y
				[/primary_unit]
			[/fire_event]
			[store_unit]
				[filter]
					x,y=$armorymod.loc.x,$armorymod.loc.y
				[/filter]
				variable=armorymod.unit
			[/store_unit]
		[/then]
	[/if]
	# though we won't use it quite yet, $armorymod.side_for should specify the side that should see the weapons
	
	# finally, armorymod.other_weapons might contain weapons from an advancement or capture that the player can also access
	
	# now begin the dialog loop:
	[while]
		[true]
		[/true]
		[do]
			[message]
				speaker=narrator
				message=_"What would you like to examine?"
				image={LOGO_LARGE}
				side_for=$armorymod.side_for
				
				# First option is for exiting the menu, of course
				[option]
					label=_"Exit menu"
					[command]
						[break]
						[/break]
					[/command]
				[/option]
				
				# if there is anything in the afore mentioned other_weapons, display that option:
				[option]
					label="$armorymod.other_weapons.title - $armorymod.other_weapons.weapons.length| weapons"
					[show_if]
						[variable]
							name=armorymod.other_weapons.weapons.length
							greater_than=0
						[/variable]
					[/show_if]
					[command]
						# note that in this [command] we can assume there is a unit; this option is only used for
						# spoils (killing an enemy) or advancements
					
						# also, for this first option I don't use the usual {DISPLAY_WEAPON_LIST} macro; 
						#   for these it's better to display each weapon sequentially,
						#   rather than making the user pick them one at a time
						[for]
							array=armorymod.other_weapons.weapons
							reverse=yes
							variable=armorymod.menu_iter
							[do]
								{DISPLAY_WEAPON $armorymod.side_for| armorymod.other_weapons.weapons[$armorymod.menu_iter|] (
									[option]
										label=_"Drop"
										[command]
											{DROP_WEAPON armorymod.other_weapons.weapons[$armorymod.menu_iter|] $armorymod.loc.x| $armorymod.loc.y|}
										[/command]
									[/option]
									[option]
										label=_"Equip"
										# but you can only equip if the unit has can_use_weapons=yes
										[show_if]
											[variable]
												name=armorymod.unit{DOT}can_use_weapons
												equals=yes
											[/variable]
										[/show_if]
										[command]
											{COPY_WEAPON armorymod.unit{DOT}weapons armorymod.other_weapons.weapons[$armorymod.menu_iter|]}
											{CLEAR_VARIABLE armorymod.other_weapons.weapons[$armorymod.menu_iter|]}
										[/command]
									[/option]
									[option]
										label=_"Destroy"
										[command]
											{CLEAR_VARIABLE armorymod.other_weapons.weapons[$armorymod.menu_iter|]}
										[/command]
									[/option]
								)}
							[/do]
						[/for]
						# rebuild the unit, since it has likely changed weapons
						[unstore_unit]
							advance=no
							variable=armorymod.unit
						[/unstore_unit]
						[fire_event]
							name=armory_rebuild_unit
							[primary_unit]
								x,y=$armorymod.loc.x,$armorymod.loc.y
							[/primary_unit]
						[/fire_event]
						[store_unit]
							[filter]
								x,y=$armorymod.loc.x,$armorymod.loc.y
							[/filter]
							variable=armorymod.unit
						[/store_unit]
					[/command]
				[/option]
				
				# If there are any items on the ground, you may examine them
				[option]
					label=_"Weapons on the ground - $armorymod.ground.$armorymod.loc.x|_$armorymod.loc.y|.length| weapons"
					[show_if]
						[variable]
							name=armorymod.ground.$armorymod.loc.x|_$armorymod.loc.y|.length
							greater_than=0
						[/variable]
					[/show_if]
					[command]
						{DISPLAY_WEAPON_LIST $armorymod.side_for| armorymod.ground.$armorymod.loc.x|_$armorymod.loc.y| armorymod_ground_weapon_selected}
						
						{IF_VAR armorymod.have_unit equals yes (
							[then]
								# rebuild the unit, since it has likely changed weapons 
								[unstore_unit]
									advance=no
									variable=armorymod.unit
								[/unstore_unit]
								[fire_event]
									name=armory_rebuild_unit
									[primary_unit]
										x,y=$armorymod.loc.x,$armorymod.loc.y
									[/primary_unit]
								[/fire_event]
								[store_unit]
									[filter]
										x,y=$armorymod.loc.x,$armorymod.loc.y
									[/filter]
									variable=armorymod.unit
								[/store_unit]
							[/then]
						)}
					[/command]
				[/option]
				
				# If there is a unit in the tile, you may examine its weapons (the weapon's stats, not the unit's)
				[option]
					label=_"The unit's weapons - $armorymod.unit{DOT}weapons.length| weapons"
					[show_if]
						[variable]
							name=armorymod.have_unit
							equals=yes
						[/variable]
					[/show_if]
					[command]
						{DISPLAY_WEAPON_LIST $armorymod.side_for| armorymod.unit{DOT}weapons armorymod_unit_weapon_selected}
					
						# rebuild the unit, since it has likely changed weapons
						[unstore_unit]
							advance=no
							variable=armorymod.unit
						[/unstore_unit]
						[fire_event]
							name=armory_rebuild_unit
							[primary_unit]
								x,y=$armorymod.loc.x,$armorymod.loc.y
							[/primary_unit]
						[/fire_event]
						[store_unit]
							[filter]
								x,y=$armorymod.loc.x,$armorymod.loc.y
							[/filter]
							variable=armorymod.unit
						[/store_unit]
					[/command]
				[/option]
				
				# You may also examine the unit's attacks (the unit's stats, not the weapon's)
				[option]
					label=_"The unit's attacks - $armorymod.unit.attack.length| attacks"
					[show_if]
						[variable]
							name=armorymod.have_unit
							equals=yes
						[/variable]
					[/show_if]
					[command]
						{DISPLAY_WEAPON_LIST $armorymod.side_for| armorymod.unit.attack armorymod_unit_attack_selected}
					[/command]
				[/option]
				
				# There is also a help menu:
				[option]
					label=_"Help"
					[command]
						[while]
							[true]
							[/true]
							[do]
								[message]
									speaker=narrator
									message=_"Welcome to Armory Mod! From this menu, you can drop, equip and destroy units' weapons. Your options depend on which units and weapons are on the square you right-clicked. Select a topic for more information:"
									image={LOGO_LARGE}
									side_for=$armorymod.side_for
									[option]
										label=_"Back to the main menu"
										[command]
											[break]
											[/break]
										[/command]
									[/option]
									[option]
										label=_"How do I capture enemy's weapons?"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												message=_"Any time you kill an enemy unit that was carrying weapons, the armory menu will open. Select the option labeled 'spoils' to plunder your foe's equipment! If you close the menu without examining the spoils, they will be dropped on your unit's tile."
												side_for=$armorymod.side_for
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
									[option]
										label=_"What's the difference between 'attacks' and 'weapons?'"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												side_for=$armorymod.side_for
												message=_"There are many attacks that don't count as a 'weapon.' For example, a Wolf Rider can't drop his fangs to allow a different unit to use them. From the main menu, you can see units' attacks and weapons separately, though they will mostly overlap.

Another important difference is that the 'weapons' may have different damage and abilities than the 'attacks.' For example, suppose an Elvish Fighter captures a Royal Guard's sword. The 'weapons' menu will display the sword's original damage, but since the elf isn't as skilled a swordsman as the Royal Guard, the elf's new attack will be less powerful (but still more powerful than the elf's original sword attack). The 'attacks' menu will show the actual damage that the elf will deal. Weapons are compared against the unit's skills based on 'Weapon types.'"
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
									[option]
										label=_"What does 'Weapon type' mean?"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												side_for=$armorymod.side_for
												message=_"When you examine a weapon in the Armory Menu, you can see a list of familar weapon attributes: damage type, weapon specials, etc. However, there is also one new attribute that isn't part of normal Wesnoth: 'Weapon type.' Weapon type is used to determine how effectively a unit can use the weapons it has equipped. A unit that naturally uses a 'spear' will be decently good at using all weapons with the 'spear' weapon type. Here is a description of all weapon types:

<b>Melee</b>
	<b>sword</b>: includes swords and daggers
	<b>axe</b>: includes axes, halberds, and drake war talons
	<b>spear</b>: includes speards, halberds, and lances
	<b>club</b>: includes clubs, hammers, flails and staffs
	<b>shield</b>: just shields
	
<b>Ranged</b>
	<b>bow</b>: includes bows and thundersticks
	<b>throwing</b>: includes javelins, slings, nets, throwing knives, etc
	<b>magic</b>: includes all spells"
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
									[option]
										label=_"What happens to my weapons when a unit advances?"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												side_for=$armorymod.side_for
												message=_"When a weapon-carrying unit advances, it gets the new weapons that come with its new unit type, and it also gets to keep everything it was carrying before advancing. The armory menu will open and let you choose what to keep, drop, or destroy."
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
									[option]
										label=_"Why don't I get options for equipping or dropping items?"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												side_for=$armorymod.side_for
												message=_"There are many cases in which you can open the armory menu, but are not allowed to move or destroy weapons: weapons laying in an unoccupied tile and units which are not on your side are the most common examples. Also, if you mean to drop or destroy items you unit is carrying, be sure to select the 'weapons' option instead of the 'attacks' one. Finally, you should be aware that many units, such as bats, are not accustomed to fighting with weapons and are therefore incapable of equipping them; such units can still choose to destroy whatever items the come across."
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
									[option]
										label=_"Can I change the hotkey for opening the Armory Menu?"
										[command]
											[message]
												speaker=narrator
												image=wesnoth-icon.png
												side_for=$armorymod.side_for
												message=_"Yes! By default, pointing the mouse and pressing alt-e will open the menu, but you can change the hotkey to whatever you want in menu->preferences->hotkeys. The actions are sorted alphabetically, so 'Armory menu' should be near the top."
												[option]
													label=_"Back to the help menu"
												[/option]
											[/message]
										[/command]
									[/option]
								[/message]
							[/do]
						[/while]
					[/command]
				[/option]
				
			[/message]
		[/do]
	[/while]
	
	{IF_VAR armorymod.have_unit equals yes (
		[then]
			[unstore_unit]
				advance=no
				variable=armorymod.unit
			[/unstore_unit]
			[fire_event]
				name=armory_rebuild_unit
				[primary_unit]
					x,y=$armorymod.loc.x,$armorymod.loc.y
				[/primary_unit]
			[/fire_event]
		[/then]
	)}
	
	
	{CLEAR_VARIABLE armorymod.menu_iter}
	{CLEAR_VARIABLE armorymod.have_unit}
	{CLEAR_VARIABLE armorymod.unit}
[/event]



# There is also a set of events defining how to display a single weapon.
# These will be fired by {DISPLAY_WEAPON_LIST}
# They expect $armorymod.weapon_index| to be set
[event]
	name=armorymod_ground_weapon_selected
	id=armorymod_ground_weapon_selected
	first_time_only=no
	{DISPLAY_WEAPON $armorymod.side_for| armorymod.ground.$armorymod.loc.x|_$armorymod.loc.y|[$armorymod.weapon_index|] (
		[option]
			label=_"Equip"
			# but you can only equip if the unit has can_use_weapons=yes
			[show_if]
				[have_unit]
					x,y=$armorymod.loc.x|,$armorymod.loc.y|
					side=$armorymod.side_for|
				[/have_unit]
				[and]
					[variable]
						name=armorymod.unit{DOT}can_use_weapons
						equals=yes
					[/variable]
				[/and]
			[/show_if]
			[command]
				{PICKUP_WEAPON $armorymod.weapon_index| armorymod.unit{DOT}weapons $armorymod.loc.x| $armorymod.loc.y|}
			[/command]
		[/option]
		[option]
			label=_"Leave on ground"
		[/option]
		[option]
			# but even bats and things can destroy weapons. and skirmishers. heh heh.
			label=_"Destroy"
			[show_if]
				[have_unit]
					x,y=$armorymod.loc.x|,$armorymod.loc.y|
					side=$armorymod.side_for|
				[/have_unit]
			[/show_if]
			[command]
				{PICKUP_WEAPON $armorymod.weapon_index| armorymod.trash_weapon $armorymod.loc.x| $armorymod.loc.y|}
				{CLEAR_VARIABLE armorymod.trash_weapon}
			[/command]
		[/option]
	)}
[/event]


[event]
	name=armorymod_unit_weapon_selected
	id=armorymod_unit_weapon_selected
	first_time_only=no
	
	{DISPLAY_WEAPON $armorymod.side_for| armorymod.unit{DOT}weapons[$armorymod.weapon_index|] (
		[option]
			label=_"Drop"
			[show_if]
				[variable]
					name=armorymod.unit.side
					equals=$armorymod.side_for|
				[/variable]
			[/show_if]
			[command]
				{DROP_WEAPON armorymod.unit{DOT}weapons[$armorymod.weapon_index|] $armorymod.loc.x| $armorymod.loc.y|}
			[/command]
		[/option]
		[option]
			label=_"Keep equipped"
			[show_if]
				[variable]
					name=armorymod.unit.side
					equals=$armorymod.side_for|
				[/variable]
			[/show_if]
		[/option]
		[option]
			label=_"Destroy"
			[show_if]
				[variable]
					name=armorymod.unit.side
					equals=$armorymod.side_for|
				[/variable]
			[/show_if]
			[command]
				{CLEAR_VARIABLE armorymod.unit{DOT}weapons[$armorymod.weapon_index|]}
			[/command]
		[/option]
		[option]
			label=_"Back to weapon list"
			[show_if]
				[variable]
					name=armorymod.unit.side
					not_equals=$armorymod.side_for|
				[/variable]
			[/show_if]
		[/option]
	)}
[/event]

[event]
	name=armorymod_unit_attack_selected
	id=armorymod_unit_attack_selected
	first_time_only=no
	{DISPLAY_WEAPON $armorymod.side_for| armorymod.unit.attack[$armorymod.weapon_index|] (
		[option]
			label=_"Back to attack list"
		[/option]
	)}
[/event]











