# a macro to help parse weapon specials, used only in the following event
#define CHECK_FOR_SPECIAL SPECIALS_VAR CONTAINER_NAME NAME
	{IF_VAR {SPECIALS_VAR}.{CONTAINER_NAME}.id equals {NAME} (
		[then]
			{VARIABLE armorymod.display_specials_list[$armorymod.display_specials_list.length].name {NAME}}
		[/then]
	)}
#enddef

# for displaying individual weapons to the player:
#define DISPLAY_WEAPON SIDE WEAPON_VAR OPTIONS
	# first comes the sticky task of making a list of the attack's specials.
	# is there a better way to do this?
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials chance_to_hit magical}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials slow slow}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials chance_to_hit marksman}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials dummy daze}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials damage charge}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials plague plague}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials swarm swarm}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials poison poison}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials drains drains}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials firststrike firststrike}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials berserk berserk}
	{CHECK_FOR_SPECIAL {WEAPON_VAR}.specials damage backstab}
	[set_variable]
		name=armorymod.display_specials
		[join]
			variable=armorymod.display_specials_list
			key=name
			separator=", "
		[/join]
	[/set_variable]
	{IF_VAR armorymod.display_specials_list.length greater_than 0 (
		[then]
			{VARIABLE armorymod.display_specials "
Special: <b>$armorymod.display_specials|</b>"}
		[/then]
	)}
	
	# Thank heavens that's done. Next, make a note if the attack isn't a weapon:
	[switch]
		variable={WEAPON_VAR}.name
		[case]
			value=$armorymod_ref.full_weapon_list|
		[/case]
		[else]
			{VARIABLE armorymod.weapon_note (_"

Note: this weapon can only be used by this unit; it cannot be dropped, destroyed, or captured.")}
		[/else]
	[/switch]
	
	# finally, pile all that information into a big messy message:
	[message]
		speaker=narrator
		side_for={SIDE}
		image=${WEAPON_VAR}.icon|~XBRZ(3)
		caption=${WEAPON_VAR}.description|
		message=_"Damage: <b>${WEAPON_VAR}.damage| x ${WEAPON_VAR}.number|</b>
Range: <b>${WEAPON_VAR}.range|</b>
Damage type: <b>${WEAPON_VAR}.type|</b>$armorymod.display_specials|$armorymod.weapon_note|"
		{OPTIONS}
	[/message]
	
	# and clean up.
	{CLEAR_VARIABLE armorymod.display_specials,armorymod.display_specials_list,armorymod.weapon_note}
#enddef


# Displays all the weapons listed in {WEAPON_VAR} to {SIDE}
# {ON_SELECT_OPTIONS} is wml [option]s to display when an item is selected
#define DISPLAY_WEAPON_LIST SIDE WEAPON_VAR ON_SELECT_OPTIONS
	{VARIABLE armorymod.inner_menu_break no}
	{VARIABLE armorymod.inner_menu_index 0}
	[while]
		[variable]
			name=armorymod.inner_menu_break
			equals=no
		[/variable]
		[do]
			{CLEAR_VARIABLE armorymod.msg}
		
			{VARIABLE armorymod.msg.speaker narrator}
			{VARIABLE armorymod.msg.side_for {SIDE}}
			{VARIABLE armorymod.msg.image "halo/fire-aura.png~SCALE(88,88)~CROP(9,9,72,72)~BLIT(projectiles/pitchfork-ne.png~ROTATE(270)~FL()~CROP(30,14,15,30),57,6)~BLIT(projectiles/pitchfork-ne.png~ROTATE(270)~CROP(25,14,21,30)~SCALE(18,20)~BW(255)~O(.7),43,16)~BLIT(projectiles/spear-ne.png~FL()~CROP(37,30,23,20)~BW(255)~O(.7),0,25)~BLIT(units/merfolk/hunter-throw-4.png~RC(magenta>blue)~CROP(50,20,20,58),3,0)~BLIT(units/human-loyalists/lieutenant-die-4.png~RC(magenta>black)~CROP(0,55,24,10),0,45)~BLIT(units/elves-wood/marksman-die-2.png~CROP(68,40,36,16)~FL(),25,46)~BLIT(units/orcs/assassin-die-10.png~CROP(50,55,18,10),14,53)~BLIT(projectiles/icemissile-ne-2.png~CROP(18,20,30,25)~FL()~BW(255)~O(.5)~SCALE(22,20),34,34)~BLIT(units/dunefolk/blademaster.png~CROP(4,10,15,30)~ROTATE(270),36,37)~BLIT(units/dunefolk/blademaster.png~CROP(4,40,21,5)~ROTATE(270),65,33)~BLIT(projectiles/icemissile-ne-2.png~CROP(18,20,30,25)~FL()~BW(255)~O(.5)~SCALE(22,20),34,34)~BLIT(items/chest-plain-open.png~SCALE(60,60)~CROP(0,4),6,0)~BLIT(items/bow-elven.png~SCALE(64,64)~CROP(17,20,17,21),24,11)~BLIT(items/bow-elven.png~SCALE(64,64)~CROP(34,20,23,40),41,11)~BLIT(units/dwarves/steelclad-idle-4.png~FL()~CROP(8,20,17,22),40,32)~XBRZ(3)"}
			{VARIABLE armorymod.msg.caption (_"Choose a weapon to examine")}
			
			{VARIABLE armorymod.msg.option[0].label (_"Exit")}
			{VARIABLE armorymod.msg.option[0].command.set_variable.name armorymod.inner_menu_break}
			{VARIABLE armorymod.msg.option[0].command.set_variable.value yes}
			
			{VARIABLE armorymod.msg.option[1].label (_"Previous items")}
			{VARIABLE armorymod.msg.option[1].show_if.variable.name armorymod.inner_menu_index}
			{VARIABLE armorymod.msg.option[1].show_if.variable.greater_than 0}
			{VARIABLE armorymod.msg.option[1].command.set_variable.name armorymod.inner_menu_index}
			{VARIABLE armorymod.msg.option[1].command.set_variable.sub 5}
			
			{VARIABLE armorymod.inner_menu_index_plus_five $armorymod.inner_menu_index|}
			{VARIABLE_OP armorymod.inner_menu_index_plus_five add 5}
			{VARIABLE armorymod.msg.option[2].label (_"Next Items")}
			{VARIABLE armorymod.msg.option[2].show_if.variable.name armorymod.inner_menu_index_plus_five}
			{VARIABLE armorymod.msg.option[2].show_if.variable.less_than ${WEAPON_VAR}.length|}
			{VARIABLE armorymod.msg.option[2].command.set_variable.name armorymod.inner_menu_index}
			{VARIABLE armorymod.msg.option[2].command.set_variable.add 5}
			
			{VARIABLE armorymod.inner_menu_end_index $armorymod.inner_menu_index|}
			{VARIABLE_OP armorymod.inner_menu_end_index add 4}
			
			{VARIABLE armorymod.option_index 3}
			[for]
				variable=armorymod.menu_iter
				start=$armorymod.inner_menu_index
				end=$armorymod.inner_menu_end_index
				[do]
					{IF_VAR {WEAPON_VAR}.length less_than_equal_to $armorymod.menu_iter| (
						[then]
							[break]
							[/break]
						[/then]
					)}
				
					{VARIABLE armorymod.msg.option[$armorymod.option_index|].image ${WEAPON_VAR}[$armorymod.menu_iter|].icon|}
					{VARIABLE armorymod.msg.option[$armorymod.option_index|].label (_"<b>${WEAPON_VAR}[$armorymod.menu_iter|].description|:</b> ${WEAPON_VAR}[$armorymod.menu_iter|].range|, ${WEAPON_VAR}[$armorymod.menu_iter|].type|, ${WEAPON_VAR}[$armorymod.menu_iter|].damage|x${WEAPON_VAR}[$armorymod.menu_iter|].number|")}
					
					{VARIABLE armorymod.msg.option[$armorymod.option_index|].command.fire_event.id armorymod_item_selected_$armorymod.menu_iter|}
					[event]
						name=armorymod_item_selected_$armorymod.menu_iter|
						id=armorymod_item_selected_$armorymod.menu_iter|
						first_time_only=no
						delayed_variable_substitution=no
						{DISPLAY_WEAPON {SIDE} {WEAPON_VAR}[$armorymod.menu_iter|] {ON_SELECT_OPTIONS}}
					[/event]
					
					{VARIABLE_OP armorymod.option_index add 1}
				[/do]
			[/for]
			
			[insert_tag]
				name=message
				variable=armorymod.msg
			[/insert_tag]
			
			{CLEAR_VARIABLE armorymod.msg}
			
			[for]
				variable=armorymod.menu_iter
				start=$armorymod.inner_menu_index
				end=$armorymod.inner_menu_end_index
				[do]
					[remove_event]
						id=armorymod_item_selected_$armorymod.menu_iter|
					[/remove_event]
				[/do]
			[/for]
			
			# if they happened to move/destroy the last weapon in the list, this loop can finish
			{IF_VAR {WEAPON_VAR}.length equals 0 (
				[then]
					[break]
					[/break]
				[/then]
			)}
		[/do]
	[/while]
	{CLEAR_VARIABLE armorymod.inner_menu_break}
	{CLEAR_VARIABLE armorymod.inner_menu_index}
#enddef










